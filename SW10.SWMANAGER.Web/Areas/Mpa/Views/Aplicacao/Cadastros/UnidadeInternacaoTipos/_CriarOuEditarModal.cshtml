@using SW10.SWMANAGER.Web.Areas.Mpa.Models.Common.Modals
@using SW10.SWMANAGER.Web.Areas.Mpa.Views.SMWEHelpers

@model SW10.SWMANAGER.Web.Areas.Mpa.Models.Aplicacao.Cadastros.Atendimentos.UnidadesInternacao.CriarOuEditarUnidadeInternacaoTipoModalViewModel

@Html.Partial("~/Areas/Mpa/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(Model.IsEditMode ? (L("EditUnidadeInternacaoTipo") + ": " + Model.Descricao) : L("CreateNewUnidadeInternacaoTipo")))

<div class="modal-body container-fluid">

    <div class="tabbable-line container-fluid">
        <ul class="nav nav-tabs ">
            <li class="active">
                <a href="#UnidadeInternacaoTipoInformationsTab" data-toggle="tab" aria-expanded="true">
                    @L("UnidadeInternacaoTipo")
                </a>
            </li>
        </ul>
        <div class="tab-content container-fluid">
            <div class="tab-pane active" id="UnidadeInternacaoTipoInformationsTab">
                <form name="UnidadeInternacaoTipoInformationsForm" role="form" novalidate class="form-validation">

                    @if (Model.IsEditMode)
                    {
                        <input type="hidden" name="Id" value="@Model.Id" />
                    }
                    @using (Html.Row())
                    {
                        Html.InputFor(m => m.Codigo, Model.Codigo, L("Codigo"), 3, required: true);
                    }
                    @using (Html.Row())
                    {
                        Html.InputFor(m => m.Descricao, Model.Descricao, L("Descricao"), 8, required: true);
                    }
                </form>
            </div>
        </div>
    </div>
</div>

@Html.Partial("~/Areas/Mpa/Views/Common/Modals/_ModalFooterWithSaveAndCancel.cshtml")