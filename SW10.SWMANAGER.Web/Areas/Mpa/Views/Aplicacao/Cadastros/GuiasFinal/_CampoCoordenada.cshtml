@using System.Web.Script.Serialization
@using SW10.SWMANAGER.ClassesAplicacao.Cadastros.Atendimentos.Guias.Dto

@model SW10.SWMANAGER.Web.Areas.Mpa.Models.Aplicacao.Cadastros.Atendimentos.Guias.CampoViewModel

@{
    string contador = Model.Contador.ToString();
    string btnSubItem = "btn-novo-sub-item-" + contador.ToString();
    string repeticoesInput = "maximo-elementos-" + contador.ToString();
    string dropConjuntoId = "drop-conjunto-" + contador.ToString();
}

<div class="col-sm-12">
    <div class="" style="margin:10px; border:1px solid; padding:10px;">
        <div class="row">
            <div class="col-sm-12">
                <div class="form-group">
                    <input type="text" value="@Model.Descricao" readonly />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    <label style="display:inline-block;">@L("Repeticoes")</label>
                    <input type="text" value="@Model.MaximoElementos.ToString()" readonly style="display:inline-block;" />
                </div>
            </div>
            @{
                var checkId = "is-conjunto-check-" + contador;
            }
            <input type="hidden" name="IsConjunto" id="@checkId" value="@Model.IsConjunto.ToString()" />
        </div>
        @{
            var divid = "div-itens-" + contador;
        }
        <div class="row">
            <div class="col-sm-12">
                <div class="center-block" id="@divid" style="width:90%;">
                    @if (Model.IsConjunto)
                    {
                        GuiaCampoDto[] subCampos = new GuiaCampoDto[] { };
                        subCampos = DeserializarCampos(Model.SubCamposJson);

                        foreach (var subCampo in subCampos)
                        {
                            <div class="row item-row drop-row" data-subitem="true" data-conjunto="" id="">
                                @Html.Action("_SubCampoCoordenada", "GuiasFinal", new { campoId = subCampo, subCampo = subCampo })
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions{
    public GuiaCampoDto[] DeserializarCampos(string camposJson)
    {
        JavaScriptSerializer jsonSerializer = new JavaScriptSerializer(new SimpleTypeResolver());
        GuiaCampoDto[] campos = new GuiaCampoDto[] { };
        campos = jsonSerializer.Deserialize<GuiaCampoDto[]>(camposJson);
        return campos;
    }
}
