@using SW10.SWMANAGER.Web.Areas.Mpa.Views.SMWEHelpers;

@model SW10.SWMANAGER.Web.Areas.Mpa.Models.Aplicacao.Cadastros.Assistenciais.Prescricoes.FormulasEstoques.CriarOuEditarFormulaEstoqueViewModel

<div class="modal-body">
    <div class="tab-content">

        @using (Html.SWDivRetratil("formula-estoque", L("FormulaEstoque"), true, 12, true, true))
        {
            <form name="FormulaEstoqueInformationsForm" role="form" novalidate class="form-validation">
                <input type="hidden" name="Id" value="@Model.Id" id="id-formula-estoque" />
                <input type="hidden" name="Codigo" value="@Model.Codigo" id="codigo-formula-estoque" />
                <input type="hidden" name="Descricao" value="@Model.Descricao" id="descricao-formula-estoque" />
                <input type="hidden" name="PrescricaoItemId" value="@Model.PrescricaoItemId" id="prescricao-item-id-formula-estoque" />
                <input type="hidden" name="IdGridFormulasEstoque" id="id-grid-formulas-estoque" value="@Model.IdGridFormulasEstoque" />
                @if (Model.IsEditMode)
                {
                    <input type="hidden" name="CreatorUserId" value="@Model.CreatorUserId" />
                }
                <div class="row">
                    @*<div class="col-md-2">
                            <div class="form-group">
                                <input name="IsPrincipal" id="is-principal-formula-estoque" type="checkbox" class="form-control icheck checkbox-inline" value="true" @Html.Raw(Model.IsPrincipal ? "checked=\"checked\"" : "") />
                                <label for="is-principal-formula-estoque">&nbsp;@L("IsPrincipal")</label>
                            </div>
                        </div>*@

                    <div class="col-sm-10">
                    </div>

                    <div class="col-md-2">
                        <div class="form-group" style="position:relative; text-align:right">
                            <button type="button" class="btn blue" id="salvar-formula-estoque"><i class="fa fa-check"></i></button>
                        </div>
                    </div>
                </div>

                @*@using (Html.Row())
                    {
                        using (Html.Select2For(m => m.EstoqueOrigemId, "estoque-origem-id-formula-estoque", "formulaestoqueclass", L("EstoqueOrigem"), Model.EstoqueOrigem != null ? string.Format("{0} - {1}", Model.EstoqueOrigem.Codigo) : "", Model.EstoqueOrigem != null ? Model.EstoqueOrigem.Descricao : "", "estoque/ResultDropdownList", "", col: 4, injetado: true)) { }

                        using (Html.Select2For(m => m.ProdutoId, "produto-id-formula-estoque", "produtoformulaestoqueclass", L("Produto"), Model.Produto != null ? Model.ProdutoId.ToString() : "", Model.Produto != null ? Model.Produto.Descricao : "", "produto/ListarProdutoPorEstoque2Dropdown", "estoque-origem-id-formula-estoque", col: 4, injetado: true)) { }

                        using (Html.Select2For(m => m.UnidadeRequisicaoId, "unidade-requisicao-id-formula-estoque", "unidaderequisicaoestoqueclass", L("UnidadeRequisicao"), Model.UnidadeRequisicao != null ? Model.UnidadeRequisicaoId.ToString() : "", Model.UnidadeRequisicao != null ? Model.UnidadeRequisicao.Descricao : "", "unidade/ListarUnidadePorProduto2Dropdown", "produto-id-formula-estoque", col: 4, injetado: true)) { }
                    }*@
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="estoque-origem-id-formula-estoque">@L("EstoqueOrigem")</label>
                            <select name="EstoqueId" id="estoque-origem-id-formula-estoque" class="form-control select2 input-sm">
                                @if (Model.EstoqueId.HasValue)
                                {
                                    <option value="@Model.EstoqueId.Value">@Model.EstoqueOrigem.Codigo - @Model.EstoqueOrigem.Descricao</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="produto-id-formula-estoque">@L("Produto")</label>
                            <select name="ProdutoId" id="produtoId" class="form-control select2 input-sm selectProduto">
                                @if (Model.ProdutoId.HasValue)
                                {
                                    <option value="@Model.ProdutoId.Value">@Model.Produto.Codigo - @Model.Produto.Descricao</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="unidade-id-formula-estoque">@L("Unidade")</label>
                            <select name="UnidadeId" id="unidade-id-formula-estoque" class="form-control select2 input-sm selectProdutoUnidade">
                                @if (Model.UnidadeId.HasValue)
                                {
                                    <option value="@Model.UnidadeId.Value">@Model.Unidade.Codigo - @Model.Unidade.Descricao</option>
                                }
                            </select>
                        </div>
                    </div>


                    <div class="col-md-1">
                        <div class="form-group">
                            <label for="QuantidadeFormulaEstoque">@L("Quantidade")</label>
                            <input type="number" id="quantidadeFormulaEstoque" name="QuantidadeFormulaEstoque" class="form-control" />
                        </div>
                    </div>


                    @*<div class="col-md-3">
                            <div class="form-group">
                                <label for="unidade-requisicao-id-formula-estoque">@L("UnidadeRequisicao")</label>
                                <select name="UnidadeRequisicaoId" id="unidade-requisicao-id-formula-estoque" class="form-control select2 input-sm">
                                    @if (Model.UnidadeRequisicaoId.HasValue)
                                    {
                                        <option value="@Model.UnidadeRequisicaoId.Value">@Model.UnidadeRequisicao.Codigo - @Model.UnidadeRequisicao.Descricao</option>
                                    }
                                </select>
                            </div>
                        </div>*@
                </div>
            </form>
        }


        @*@using (Html.SWDivRetratil("formula-estoque-kit", L("FormulaEstoqueKit"), true, 12, true, true))
            {
                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <select name="EstoquekitId" id="estoquekitId" class="form-control select2"></select>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group" style="position:relative; text-align:right">
                            <button type="button" class="btn blue" id="salvar-kit-estoque"><i class="fa fa-check"></i></button>
                        </div>
                    </div>
                </div>
            }*@


    </div>
</div>

@*<div class="modal-footer">*@
@*<button type="button" class="btn default close-button" data-dismiss="modal">@L("Cancel")</button>*@
@*<button type="button" class="btn blue" id="salvar-formula-estoque"><i class="fa fa-check"></i></button>
    </div>*@

<script>
    var _$formFormulaEstoque = null;

    // selectSW('.EstoquekitSelect', "/api/services/app/estoqueKitApp/ListarKitDropdown");



    $('#salvar-formula-estoque').on('click', function (e) {
        e.preventDefault();
        var itemProcessado = false;
        var _$formulaEstoqueForm = $('form[name="FormulaEstoqueInformationsForm"]');
        _$formulaEstoqueForm.validate();
        if (!_$formulaEstoqueForm.valid()) {
            return;
        }
        var formulaEstoque = _$formulaEstoqueForm.serializeFormToObject();

        formulaEstoque.Quantidade = formulaEstoque.QuantidadeFormulaEstoque;

        

        var campoProduto = $('#produtoId').select2('data');

        if (campoProduto && campoProduto.length > 0) {
            formulaEstoque.ProdutoDescricao = campoProduto[0].text;
        }

        var campoUnidade = $('#unidade-id-formula-estoque').select2('data');

        if (campoUnidade && campoUnidade.length > 0) {
            formulaEstoque.UnidadeDescricao = campoUnidade[0].text;
        }


        var formulaEstoqueList = $('#formula-estoque-list').val();
        localStorage["FormulaEstoqueList"] = formulaEstoqueList;
        if (!localStorage["FormulaEstoqueList"] || (localStorage["FormulaEstoqueList"] && localStorage["FormulaEstoqueList"] == '[]')) {
            localStorage["FormulaEstoqueList"] = '';
        }
        if (localStorage["FormulaEstoqueList"] != '') {
            var lista = JSON.parse(localStorage["FormulaEstoqueList"]);
        }
        else {
            var lista = [];
        }

        //if ($('#id-grid-formulas-estoque').val() != '' && $('#formula-estoque-list').val() != '[]') {
        if (lista.length > 0) {
            for (var i = 0; i < lista.length; i++) {
                if (lista[i].IdGridFormulasEstoque == $('#id-grid-formulas-estoque').val()) {
                    //editando o registro
                    lista[i].Id = formulaEstoque.Id;
                    lista[i].Codigo = $('#codigo-formula-estoque').val();
                    lista[i].Descricao = $('#descricao-formula-estoque').val();
                    lista[i].EstoqueId = formulaEstoque.EstoqueId;
                    lista[i].ProdutoId = formulaEstoque.ProdutoId;
                    lista[i].UnidadeId = formulaEstoque.UnidadeId;
                    lista[i].PrescricaoItemId = formulaEstoque.PrescricaoItemId;
                    lista[i].IsPrincipal = formulaEstoque.IsPrincipal;
                    lista[i].IdGridFormulasEstoque = formulaEstoque.IdGridFormulasEstoque;
                    lista[i].Quantidade = formulaEstoque.Quantidade;
                    lista[i].ProdutoDescricao = formulaEstoque.ProdutoDescricao;
                    lista[i].UnidadeDescricao = formulaEstoque.UnidadeDescricao;
                    
                    itemProcessado = true;
                    break;

                    quantidadeformulaEstoque
                }
            }
            if (!itemProcessado) {
                formulaEstoque.IdGridFormulasEstoque = lista.length == 0 ? 1 : lista[lista.length - 1].IdGridFormulasEstoque + 1;
                lista.push(formulaEstoque);
            }
        }
        else {
            formulaEstoque.IdGridFormulasEstoque = lista.length == 0 ? 1 : lista[lista.length - 1].IdGridFormulasEstoque + 1;
            lista.push(formulaEstoque);
        }

        $('#formula-estoque-list').val(JSON.stringify(lista));
        localStorage["FormulaEstoqueList"] = JSON.stringify(lista);
        abp.notify.info(app.localize('ListaAtualizada'));
        //abp.event.trigger('app.CriarOuEditarFormulaEstoqueModalSaved');
        $('#FormulasEstoquesTable').jtable('load', {
            prescricaoItemId: $('#prescricao-item-id').val()
        });
        //getFormulasEstoques();
        $('#CreateNewFormulaEstoqueButton').trigger('click');
    });

    $('#estoque-origem-id-formula-estoque').on('change', function (e) {
        $('#produto-id-formula-estoque').empty();
        $('#unidade-requisicao-id-formula-estoque').empty();

        selectSWMultiplosFiltros('.selectProduto', "/api/services/app/produto/ListarProdutoPorEstoqueDropdown", ['estoque-origem-id-formula-estoque']);

    });

    $('#unidade-requisicao-id-formula-estoque').on('change', function (e) {
        var data = $(this).select2('data');
        var txt = '';
        if (data && data.length > 0) {
            txt = data[0].text;
            var cod = $(this).val();
            $('<option value=' + cod + '>' + txt + '</option>').appendTo($('#unidade-requisicao-id-prescricao-item'));
            $('#unidade-requisicao-id-prescricao-item').val(cod).change();
        }
    }).select2({
        allowClear: true,
        placeholder: app.localize("SelecioneLista"),
        ajax: {
            url: '/api/services/app/produtounidade/ListarUnidadePorProdutoDropdown',
            dataType: 'json',
            delay: 250,
            method: 'Post',
            data: function (params) {
                if (params.page == undefined)
                    params.page = '1';
                return {
                    search: params.term,
                    page: params.page,
                    totalPorPagina: 10,
                    filtro: $('#produto-id-formula-estoque').val()
                };
            },
            processResults: function (data, params) {
                params.page = params.page || 1;

                return {
                    results: data.result.items,
                    pagination: {
                        more: (params.page * 10) < data.result.totalCount
                    }
                };
            },
            cache: true
        },
        escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
        minimumInputLength: 0
    });

    $('#unidade-id-formula-estoque').on('change', function (e) {
        var data = $(this).select2('data');
        var txt = '';
        if (data && data.length > 0) {
            txt = data[0].text;
            var cod = $(this).val();
            $('<option value=' + cod + '>' + txt + '</option>').appendTo($('#unidade-id-prescricao-item'));
            $('#unidade-id-prescricao-item').val(cod).change();
        }
    }).select2({
        allowClear: true,
        placeholder: app.localize("SelecioneLista"),
        ajax: {
            url: '/api/services/app/produtounidade/ListarUnidadePorProdutoDropdown',
            dataType: 'json',
            delay: 250,
            method: 'Post',
            data: function (params) {
                if (params.page == undefined)
                    params.page = '1';
                return {
                    search: params.term,
                    page: params.page,
                    totalPorPagina: 10,
                    filtro: $('#produto-id-formula-estoque').val()
                };
            },
            processResults: function (data, params) {
                params.page = params.page || 1;

                return {
                    results: data.result.items,
                    pagination: {
                        more: (params.page * 10) < data.result.totalCount
                    }
                };
            },
            cache: true
        },
        escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
        minimumInputLength: 0
    });

    //$('#produto-id-formula-estoque').on('change', function (e) {
    //    var data = $(this).select2('data');
    //    var txt = '';
    //    if (data && data.length > 0) {
    //        txt = data[0].text;
    //    }
    //    var arr = txt.split(' - ');
    //    var codigo = arr[0];
    //    var texto = '';
    //    for (var i = 1; i < arr.length; i++) {
    //        texto += arr[i] + ' ';
    //    }
    //    //$('#descricao-prescricao-item').val($('#produto-id-formula-estoque').val());
    //    $('#descricao-formula-estoque').val(texto);
    //    $('#codigo-formula-estoque').val(codigo);
    //    if ($('#descricao-prescricao-item').val() === "" || $('#descricao-prescricao-item').val() == undefined) {
    //        $('#descricao-prescricao-item').val(texto);
    //        $('#codigo-prescricao-item').val(codigo);
    //    }
    //}).select2({
    //    allowClear: true,
    //    placeholder: app.localize("SelecioneLista"),
    //    ajax: {
    //        url: '/api/services/app/produto/listardropdown',
    //        dataType: 'json',
    //        delay: 250,
    //        method: 'Post',
    //        data: function (params) {
    //            if (params.page == undefined)
    //                params.page = '1';
    //            return {
    //                search: params.term,
    //                page: params.page,
    //                totalPorPagina: 10,
    //                filtro: $('#estoque-origem-id-formula-estoque').val()
    //            };
    //        },
    //        processResults: function (data, params) {
    //            params.page = params.page || 1;

    //            return {
    //                results: data.result.items,
    //                pagination: {
    //                    more: (params.page * 10) < data.result.totalCount
    //                }
    //            };
    //        },
    //        cache: true
    //    },
    //    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
    //    minimumInputLength: 0
    //});


    $('#produtoId').on('change', function (e) {

        selectSWMultiplosFiltros('.selectProdutoUnidade', "/api/services/app/produtoUnidade/ListarUnidadeConsumoProdutoDropdown", ['produtoId']);
    });





    $('.select2').css('width', '100%');



</script>