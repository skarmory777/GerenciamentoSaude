@using SW10.SWMANAGER.Web.Areas.Mpa.Models.Common.Modals
@using SW10.SWMANAGER.Web.Areas.Mpa.Models.Aplicacao.Cadastros.Faturamentos.SubGrupos
@using SW10.SWMANAGER.Web.Areas.Mpa.Views.SMWEHelpers

@model SW10.SWMANAGER.Web.Areas.Mpa.Models.Aplicacao.Cadastros.Faturamentos.Grupos.CriarOuEditarFaturamentoGrupoModalViewModel

@Html.Partial("~/Areas/Mpa/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(Model.IsEditMode ? (L("EditGrupo") + ": " + Model.Descricao) : L("CreateNewGrupo")))

<div class="modal-body container-fluid">

    <form name="GrupoInformationsForm" role="form" novalidate class="form-validation">


        <input type="hidden" name="Id" id="model-id" value="@Model.Id" />


        @using (Html.Row())
        {
            var tipoGrupoText = Model.TipoGrupo != null ? Model.TipoGrupo.Descricao : string.Empty;
            Html.Select2For(m => m.TipoGrupoId, "cbo-tipo-grupo", "tipoGrupoSel2", L("TipoGrupo"), Model.TipoGrupoId.ToString(), tipoGrupoText, "faturamentoTipoGrupo/ListarDropdown", "", col: 7);
            Html.InputFor(m => m.Codigo, Model.Codigo, L("Codigo"), col: 2);
            Html.InputFor(m => m.CodTipoOutraDespesa, Model.CodTipoOutraDespesa, L("CodigoTipoOutraDespesa"), col: 3);
        }

        @using (Html.Row())
        {
            Html.InputFor(m => m.Descricao, Model.Descricao, L("Descricao"), col: 12);
        }

        <!-- ABAS -->

        <div id="abas-div">
            <br />
            @using (Html.Abas())
            {
                Html.Aba("ConfiguracoesTab", L("Configuracao"), true);
                Html.Aba("SubgruposTab", L("Subgrupos"), false);
                Html.Aba("ConveniosTab", L("Convenios"), false);
            }

            @using (Html.AbasConteudo())
            {
                using (Html.AbaConteudo("ConfiguracoesTab", true))
                {
                    <br />
                    Html.CheckboxSWFor(m => m.IsAtivo, "is-ativo", L("Ativo"), Model.IsAtivo, col: 3);
                    Html.CheckboxSWFor(m => m.IsObrigaMedico, "is-obriga-medico", L("ObrigaMedico"), Model.IsObrigaMedico, col: 3);
                    Html.CheckboxSWFor(m => m.IsTaxaUrgencia, "is-taxa-urgencia", L("TaxaUrgencia"), Model.IsTaxaUrgencia, col: 3);
                    Html.CheckboxSWFor(m => m.IsPediatria, "is-pediatria", L("Pediatria"), Model.IsPediatria, col: 3);
                    Html.CheckboxSWFor(m => m.IsProcedimentoSerie, "is-procedimento-serie", L("ProcedimentoSerie"), Model.IsProcedimentoSerie, col: 3);
                    Html.CheckboxSWFor(m => m.IsRequisicaoExame, "is-requisicao-exame", L("RequisicaoExame"), Model.IsRequisicaoExame, col: 3);
                    Html.CheckboxSWFor(m => m.IsPermiteRevisao, "is-permite-revisao", L("PermiteRevisao"), Model.IsPermiteRevisao, col: 3);
                    Html.CheckboxSWFor(m => m.IsPrecoManual, "is-preco-manual", L("PrecoManual"), Model.IsPrecoManual, col: 3);
                    Html.CheckboxSWFor(m => m.IsAutorizacao, "is-autorizacao", L("Autorizacao"), Model.IsAutorizacao, col: 3);
                    Html.CheckboxSWFor(m => m.IsInternacao, "is-internacao", L("Internacao"), Model.IsInternacao, col: 3);
                    Html.CheckboxSWFor(m => m.IsAmbulatorio, "is-Ambulatorio", L("Ambulatorio"), Model.IsAmbulatorio, col: 3);
                    Html.CheckboxSWFor(m => m.IsCirurgia, "is-Cirurgia", L("Cirurgia"), Model.IsCirurgia, col: 3);
                    Html.CheckboxSWFor(m => m.IsPorte, "is-Porte", L("Porte"), Model.IsPorte, col: 3);
                    Html.CheckboxSWFor(m => m.IsConsultor, "is-Consultor", L("Consultor"), Model.IsConsultor, col: 3);
                    Html.CheckboxSWFor(m => m.IsLaboratorio, "is-Laboratorio", L("Laboratorio"), Model.IsLaboratorio, col: 3);
                    Html.CheckboxSWFor(m => m.IsPlantonista, "is-Plantonista", L("Plantonista"), Model.IsPlantonista, col: 3);
                    Html.CheckboxSWFor(m => m.IsOpme, "is-Opme", L("Opme"), Model.IsOpme, col: 3);
                    Html.CheckboxSWFor(m => m.IsExtraCaixa, "is-ExtraCaixa", L("ExtraCaixa"), Model.IsExtraCaixa, col: 3);
                    Html.CheckboxSWFor(m => m.IsLaudo, "is-Laudo", L("Laudo"), Model.IsLaudo, col: 3);
                    Html.CheckboxSWFor(m => m.IsOutraDespesa, "is-outra-despesa", L("OutraDespesa"), Model.IsOutraDespesa, col: 3);

                }

                using (Html.AbaConteudo("SubgruposTab", false))
                {
                    var subGruposModel = new FaturamentoSubGruposViewModel();
                    subGruposModel.GrupoId = Model.Id;

                    @Html.Partial("~/Areas/Mpa/Views/Aplicacao/Cadastros/Faturamentos/Grupos/_SubGrupos.cshtml", subGruposModel)
                }

                using (Html.AbaConteudo("ConveniosTab", false))
                {
                    <div class="row">
                        @*<div class="col-sm-3">
                                <label>Grupo</label>
                                <input class="form-control input-sm" type="text" value="@Model.Descricao" disabled>
                            </div>*@
                        @{
                            Html.InputFor(m => m.ConvenioCodigo, Model.ConvenioCodigo, L("Codigo"), col: 3);
                            Html.Select2For(m => m.Sel2Convenio, "cbo-convenio", "convenioSel2", L("Convenio"), "", "", "convenio/ListarDropdown", "", col: 5);

                            <br /><br />
                            Html.CheckboxSWFor(m => m.ConvenioIsOutraDespesa, "convenio-is-outra-despesa", L("OutraDespesa"), Model.IsOutraDespesa, col: 2);

                            <div class="col-sm-2 text-right">
                                <button type="button" class="btn blue fa fa-plus" id="salvar-config" style="position:relative; top:-7px;">@*<i id="icone-btn-salvar" class="fa fa-plus"></i>*@</button>
                            </div>
                        }
                    </div>


                    <div class="row">
                        <div class="col-sm-12">
                            <div id="convenio-jtable"></div>
                        </div>
                    </div>
                                }
                            }
        </div>


    </form>

</div>

<div class="modal-footer">
    <button type="button" class="btn default close-button" data-dismiss="modal">@L("Cancel")</button>

    @if (Model.IsEditMode)
    {
        <button type="button" class="btn blue save-button"><i class="fa fa-save"></i> <span>@L("Save")</span></button>
    }
    else
    {
        <button type="button" class="btn blue save-button" id="btn-salvar-original" style="display:none;"><i class="fa fa-save"></i> <span>@L("Save")</span></button>
        <button type="button" class="btn blue" id="btn-salvar-custom" onclick="salvarGrupo();"><i class="fa fa-save"></i> <span>@L("Save")</span></button>
    }
</div>

<script type="text/javascript">

    $(document).ready(function () {

        // Configuracao de convenio
        var _ConfigsService = abp.services.app.faturamentoGrupo;
        var _$ConfigsTable = $('#convenio-jtable');

        // Salvar configuracao de convenio
        $('#salvar-config').on('click', function (e) {
            var configConvenioDto = {
                GrupoId: '@Model.Id',
                Codigo: $("input[name='ConvenioCodigo']").val(),
                ConvenioId: $('#cbo-convenio').val(),
                IsOutraDespesa: $('#convenio-is-outra-despesa').swChkValor()
            }

            // Salvando de acordo com selecao na jtable
            var configSelecionadas = _$ConfigsTable.jtable('selectedRows');
            if (configSelecionadas.length > 0) {
                configSelecionadas.each(function () {
                    var record = $(this).data('record');

                    _ConfigsService.obterGrupoConvenio(record.id)
                   .done(function (configConvenioObtida) {
                       configConvenioObtida.GrupoId = '@Model.Id';
                       configConvenioObtida.Codigo = $("input[name='ConvenioCodigo']").val();
                       configConvenioObtida.ConvenioId = $('#cbo-convenio').val();
                       configConvenioObtida.IsOutraDespesa = $('#convenio-is-outra-despesa').swChkValor();

                       _ConfigsService.criarOuEditarGrupoConvenio(configConvenioObtida)
                         .done(function () {
                             abp.notify.info(app.localize('SavedSuccessfully'));
                             getConfigs();
                             //    resetarFormGlobal();
                         });
                   });

                });

            } else {
                _ConfigsService.criarOuEditarGrupoConvenio(configConvenioDto)
                  .done(function () {
                      abp.notify.info(app.localize('SavedSuccessfully'));
                      getConfigs();
                      //    resetarFormGlobal();
                  });
            }
        });

        @if (!Model.IsEditMode)
        {
            <text>
        $('#abas-div').hide();
        </text>
        }



        function getConfigs(reload) {
            if (reload) {
                _$ConfigsTable.jtable('reload');
            } else {
                _$ConfigsTable.jtable('load', {
                    filtro: '@Model.Id'
                });
            }
        }

        // Resetar todos elementos form
        function resetarForm() {
            $("input[name='ConvenioCodigo']").val('');
            $('#cbo-convenio').swCboReset();
            $('#convenio-is-outra-despesa').swChkSet(false);
            $('#salvar-config').swBtnCrudAlternaIcone();
        }

        _$ConfigsTable.jtable({
            title: app.localize('ConfigConvenio'),
            paging: true,
            sorting: true,
            multiSorting: true,
            selecting: true,
            selectingCheckboxes: true,

            actions: {
                listAction: {
                    method: _ConfigsService.listarConfigPorGrupo
                }
            },

            fields: {
                id: {
                    key: true,
                    list: false
                },

                actions: {
                    title: app.localize('Actions'),
                    width: '7%',
                    sorting: false,
                    display: function (data) {
                        var $span = $('<span></span>');
                        $('<button class="btn btn-default btn-xs" title="' + app.localize('Delete') + '"><i class="fa fa-trash-alt"></i></button>')
                            .appendTo($span)
                            .click(function (e) {
                                e.preventDefault();
                                deleteTabelas(data.record);
                            });
                        return $span;
                    }
                }
                ,
                codigo: {
                    title: app.localize('Codigo'),
                    width: '6%',
                    display: function (data) {
                        return data.record.codigo;
                    }
                }
                ,
                convenio: {
                    title: app.localize('Convenio'),
                    width: '4%',
                    display: function (data) {
                        return data.record.convenio.nomeFantasia;
                    }
                }
                ,
                isOutraDespesa: {
                    title: app.localize('OutraDespesa'),
                    width: '4%',
                    display: function (data) {
                        return data.record.isOutraDespesa;
                    }
                }
            },

            selectionChanged: function () {
                var configSelecionadas = _$ConfigsTable.jtable('selectedRows');

                if (configSelecionadas.length > 0) {
                    configSelecionadas.each(function () {
                        var record = $(this).data('record');
                        record.codigo && $("input[name='ConvenioCodigo']").val(record.codigo) || $("input[name='ConvenioCodigo']").val('');
                        record.convenio && SmweSavior.setCombo($('#cbo-convenio'), record.convenio.id, abp.services.app.convenio) || $('#cbo-convenio').swCboReset();
                        $('#convenio-is-outra-despesa').swChkSet(record.isOutraDespesa);
                    });

                    $('#salvar-config').swBtnCrudAlternaIcone();
                } else {
                    // Resetar form
                    resetarForm();
                }
            }
        });

        getConfigs();

    });

    function salvarGrupo() {
        var formGrupo = $('form[name=GrupoInformationsForm]');
        if (!formGrupo.valid()) { return; }
        var grupo = formGrupo.serializeFormToObject();

        abp.services.app.faturamentoGrupo.criarOuEditar(grupo)
             .done(function (grupoSalvoId) {
                 abp.notify.info(app.localize('SavedSuccessfully'));
                 $('#btn-salvar-custom').hide();
                 $('#btn-salvar-original').show();
                 $('#abas-div').slideDown();
                 abp.event.trigger('app.CriarOuEditarGrupoModalSaved');
                 $('.modal-dialog').animate({ top: "0px" });
                 $('#model-id').val(grupoSalvoId);
             })
            .always(function () { });
    }

</script>

