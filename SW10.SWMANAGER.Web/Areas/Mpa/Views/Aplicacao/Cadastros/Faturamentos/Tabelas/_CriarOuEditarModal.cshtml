@using SW10.SWMANAGER.Web.Areas.Mpa.Models.Common.Modals
@using Abp.Web.Mvc.Extensions
@using SW10.SWMANAGER.Web.Navigation
@using SW10.SWMANAGER.Web.Areas.Mpa.Views.SMWEHelpers

@model SW10.SWMANAGER.Web.Areas.Mpa.Models.Aplicacao.Cadastros.Faturamentos.Tabelas.CriarOuEditarFaturamentoTabelaModalViewModel

@{
    ViewBag.CurrentPageName = PageNames.App.Faturamentos.Faturamento;
}

@section Styles
{
    @Html.IncludeStyle("~/Areas/Mpa/Views/Aplicacao/Cadastros/Faturamentos/Tabelas/index.min.css")
}

@section Scripts
{




    @Html.IncludeScript("~/Areas/Mpa/Views/Aplicacao/Cadastros/Faturamentos/Tabelas/_CriarOuEditarModal.js")
}

@Html.Partial("~/Areas/Mpa/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(Model.IsEditMode ? (L("EditTabela") + ": " + Model.Descricao) : L("CreateNewTabela")))


<div class="modal-body container-fluid">

    <form name="FaturamentoTabelaInformationsForm" role="form" novalidate class="form-validation" id="form-faturamentoTabela">

        @if (Model.IsEditMode)
        {
            <input type="hidden" name="CreatorUserId" id="creatorUserId" value="@Model.CreatorUserId" />
        }

        <input name="Id" id="id" type="hidden" value="@Model.Id">

        @using (Html.Row())
        {
            Html.InputFor(m => m.Codigo, new SWTag("codigo", "Codigo", L("Codigo"), value: Model.Codigo, col: 2), L("Codigo"));
            Html.InputFor(m => m.Descricao, new SWTag("descricao", "Descricao", L("Descricao"), value: Model.Descricao, col: 8), L("Descricao"));
            //Html.CheckboxSW("IsAtualizaBrasindice", "chk-atualizabrasindice", L("IsAtualizaBrasindice"), Model.IsAtualizaBrasindice, 2);

            <div class="col-sm-2">
                <div class="form-group">
                    <div class="md-checkbox" style="position:relative; top:22px">
                        <label for="chk-is-atualizabrasindice">@L("IsAtualizaBrasindice")</label>
                        <input name="IsAtualizaBrasindice" id="chk-atualizabrasindice" class="md-check" type="checkbox" value="true" @Html.Raw(Model.IsAtualizaBrasindice ? "checked=\"checked\"" : "") />
                        <label for="chk-atualizabrasindice">
                            <span class="inc"></span>
                            <span class="check"></span>
                            <span class="box"></span>
                        </label>
                    </div>
                </div>
            </div>
        }

        <div id="itens-div">
            <br />

            @using (Html.Abas())
            {
                Html.Aba("tab_itens", "Itens", true);
            }

            @using (Html.AbasConteudo())
            {
                using (Html.AbaConteudo("tab_itens", true))
                {
                    <div class="row">
                        @using (Html.Select2For(m => m.FiltroSel2, "cbo-filtro-moeda", "FiltroMoedaSel2", L("FiltroMoeda"), "", "", "sisMoeda/listarDropdown", "", 3)) { }
                        <div class="col-md-7">
                            <div class="inputs inputs-full-width" style="position:relative; top:19px;">
                                <div class="portlet-input">
                                    <form>
                                        <div class="input-group">
                                            <input id="precos-filter" class="form-control" placeholder="@L("SearchWithThreeDot")" type="text" value="">
                                            <span class="input-group-btn">
                                                <button id="btn-get-precos" class="btn default"><i class="icon-magnifier"></i></button>
                                            </span>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-2 text-right">
                            <span id="CreateNewItemTabelaButton" class="btn btn-primary blue" style="position:relative; top:19px;"><i class="fa fa-plus"></i> @L("CreateNewItemTabela")</span>
                        </div>
                    </div>

                    <div id="ItensTabelaTable"></div>
                }
            }
        </div>
    </form>

</div>

<div class="modal-footer">
    <button type="button" class="btn default close-button" data-dismiss="modal">@L("Cancel")</button>

    @if (Model.IsEditMode)
    {
        <button type="button" class="btn blue save-button"><i class="fa fa-save"></i> <span>@L("Save")</span></button>
    }
    else
    {
        <button type="button" class="btn blue save-button" id="btn-salvar-original" style="display:none;"><i class="fa fa-save"></i> <span>@L("Save")</span></button>
        <button type="button" class="btn blue" id="btn-salvar-custom" onclick="salvarTabela();"><i class="fa fa-save"></i> <span>@L("Save")</span></button>
    }
</div>


<script type="text/javascript">
    $(document).ready(function () {

        @if (!Model.IsEditMode)
        {
        <text>
        $('#itens-div').hide();
        </text>
        }

    });





    function salvarTabela() {
        var formTabela = $('form[name=FaturamentoTabelaInformationsForm]');
        if (!formTabela.valid()) { return; }
        var tabela = formTabela.serializeFormToObject();

        abp.services.app.faturamentoTabela.criarOuEditar(tabela)
             .done(function (tabelaSalvaId) {
                 abp.notify.info(app.localize('SavedSuccessfully'));

                 $('#btn-salvar-custom').hide();
                 $('#btn-salvar-original').show();
                 $('#itens-div').slideDown();

                 abp.event.trigger('app.CriarOuEditarTabelaModalSaved');

                 $('.modal-dialog').animate({ top: "0px" });

                 //console.log(tabelaSalvaId);
                 $('#id').val(tabelaSalvaId);

             })
            .always(function () {

            });
    }

    // PRECOS (ITENS TABELA)
    var _$ItensTabelaTable = $('#ItensTabelaTable');
    var _ItensTabelaService = abp.services.app.faturamentoItemTabela;
    var _$filterForm = $('#ItensTabelaFilterForm');
    var _permissions = {
        create: abp.auth.hasPermission('Pages.Tenant.Cadastros.Faturamento.ItensTabela.Create'),
        edit: abp.auth.hasPermission('Pages.Tenant.Cadastros.Faturamento.ItensTabela.Edit'),
        'delete': abp.auth.hasPermission('Pages.Tenant.Cadastros.Faturamento.ItensTabela.Delete')
    };
    var _createOrEditModal = new app.ModalManager({
        viewUrl: abp.appPath + 'Mpa/FaturamentoItensTabela/CriarOuEditarModal',
        scriptUrl: abp.appPath + 'Areas/Mpa/Views/Aplicacao/Cadastros/Faturamentos/ItensTabela/_CriarOuEditarModal.js',
        modalClass: 'CriarOuEditarFaturamentoItemTabelaModal'
    });

    function abrirModal() {
        _createOrEditModal.open();
    }

    _$ItensTabelaTable.jtable({

        title: app.localize('ItensTabela'),
        paging: true,
        pageSize: 10,
        sorting: true,
        multiSorting: true,

        actions: {
            listAction: {
                method: _ItensTabelaService.listarParaFatTabela
            }
        },

        fields: {
            id: {
                key: true,
                list: false
            },
            actions: {
                title: app.localize('Actions'),
                width: '5%',
                sorting: false,
                display: function (data) {
                    var $span = $('<span></span>');
                    if (_permissions.edit) {
                        $('<span class="btn btn-default btn-xs" title="' + app.localize('Edit') + '"><i class="fa fa-edit"></i></span>')
                            .appendTo($span)
                            .click(function () {

                                _createOrEditModal.open({ id: data.record.id, tabelaId: $('#id').val() });
                            });
                    }

                    if (_permissions.delete) {
                        $('<span class="btn btn-default btn-xs" title="' + app.localize('Delete') + '"><i class="fa fa-trash-alt"></i></span>')
                            .appendTo($span)
                            .click(function () {
                                deleteItensTabela(data.record);
                            });
                    }

                    return $span;
                }
            }
            ,
            codigo: {
                title: app.localize('Codigo'),
                width: '5%'
            }
            ,
            descricao: {
                title: app.localize('Descricao'),
                width: '10%'
            }
            ,
            sisMoeda: {
                title: app.localize('Moeda'),
                width: '5%',
                display: function (data) {
                    if (data.record.sisMoeda) {
                        return data.record.sisMoeda.descricao;
                    }
                }
            }
            ,
            preco: {
                title: app.localize('Preco'),
                width: '5%',
                display: function (data) {
                    if (data.record.preco) {
                        return posicionarDireita(formatarValor(data.record.preco));
                    }
                }
            }
            ,
        }
    });

    $('#btn-get-precos').on('click', function (e) {
        e.preventDefault();
        getItensTabela();
    });

    function getItensTabela(reload) {
        if (reload) {
            _$ItensTabelaTable.jtable('reload');
        } else {
            _$ItensTabelaTable.jtable('load', {
                filtro: $('#precos-filter').val(),
                tabelaId: $('#id').val(),
                moedaId: $('#cbo-filtro-moeda').val()
            });
        }
    }

    function deleteItensTabela(itemTabela) {
        abp.message.confirm(
            app.localize('DeleteWarning', itemTabela.descricao),
            function (isConfirmed) {
                if (isConfirmed) {
                    _ItensTabelaService.excluir(itemTabela)
                        .done(function () {
                            getItensTabela(true);
                            abp.notify.success(app.localize('SuccessfullyDeleted'));
                        });
                }
            }
        );
    }

    function createRequestParams() {
        var prms = {};
        _$filterForm.serializeArray().map(function (x) { prms[x.name] = x.value; });
        return $.extend(prms);
    }

    $('#ShowAdvancedFiltersSpan').click(function () {
        $('#ShowAdvancedFiltersSpan').hide();
        $('#HideAdvancedFiltersSpan').show();
        $('#AdvacedAuditFiltersArea').slideDown();
    });

    $('#HideAdvancedFiltersSpan').click(function () {
        $('#HideAdvancedFiltersSpan').hide();
        $('#ShowAdvancedFiltersSpan').show();
        $('#AdvacedAuditFiltersArea').slideUp();
    });

    $('#CreateNewItemTabelaButton').click(function (e) {
        e.preventDefault();
        var descricao = $('#descricao').val();
        if (descricao == '') {
            abp.notify.info(app.localize('DescricaoRequerida'));
        }
        else {
            //console.log('tabelaId: ' + $('#id').val());
            _createOrEditModal.open({ tabelaId: $('#id').val() });
        }
    });

    //$('#ExportarItensTabelaParaExcelButton').click(function () {
    //    _ItensTabelaService
    //        .listarParaExcel({
    //            filtro: $('#ItensTabelaTableFilter').val(),
    //            //sorting: $(''),
    //            maxResultCount: $('span.jtable-page-size-change select').val()
    //        })
    //        .done(function (result) {
    //            app.downloadTempFile(result);
    //        });
    //});

    $('#GetItensTabelaButton, #RefreshItensTabelaListButton').click(function (e) {
        e.preventDefault();
        getItensTabela();
    });

    abp.event.on('app.CriarOuEditarItemTabelaModalSaved', function () {
        //   debugger//modal TABELAS
        getItensTabela();
    });

    getItensTabela();

    $('#ItensTabelaTableFilter').focus();

    // FIM PRECOS (ITENS TABELA)

</script>
