@model SW10.SWMANAGER.Web.Areas.Mpa.Models.Aplicacao.Cadastros.Atendimentos.InternacoesViewModel

@{
    //ViewBag.CurrentPageName = PageNames.App.Atendimentos.Internacao;
    long btnUnidade = Convert.ToInt64(Model.Id.ToString());
}
<div class="form">
    <p class="white-space">&nbsp;</p>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="empresa-id">@L("Empresa")</label>
                <select name="EmpresaId" id="empresa-id" class="form-control select2">
                    @if (Model.EmpresaId.HasValue)
                    {
                        <option value="@Model.EmpresaId.Value">@Model.Empresa.NomeFantasia</option>
                    }
                </select>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="empresa-id">@L("Filtro")</label>
                <div class="input-group">
                    <input id="MapaLeitoTableFilter" class="form-control" placeholder="@L("SearchWithThreeDot")" type="text" value="@Model.Filtro">
                    <span class="input-group-btn">
                        <button id="GetLeitosButton" class="btn default"><i class="icon-magnifier"></i></button>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3">
            <div class="form-group">
                    <label class="radiobox-inline" style="padding-right:15px"> <input type="radio" name="SomenteInternados" id="todos"  checked />@L("Todos") </label>
                    <label class="radiobox-inline" style="padding-right:15px"> <input type="radio" name="SomenteInternados" id="somente-internados"  />@L("Ocupados")</label>
                    <label class="radiobox-inline">
                        <input type="radio" name="SomenteInternados" id="somente-vagos"  />@L("Vagos")
                    </label>
                
            </div>
        </div>
        <div class="col-md-offset-3 col-md-6 text-right">
            <button id="RelatorioButton" class="btn btn-primary blue novo-relatorio"><i class=""></i> @L("Relatorio")</button>
            <button id="RefreshLeitosButton" class="btn blue loadJtable"><i class="fa fa-sync"></i> @L("Refresh")</button>
        </div>
    </div>
</div>
<br />
@{
    <div class="btn-group btn-group-justified" style="width:100%; height:25px;">

        @foreach (var unidade in Model.UnidadesOrganizacionais)
        {
            btnUnidade = unidade.Id;
            // teoricamente deveria colocar as letras em minusculo exceto a primeira
            // precisa filtrar com if(unidade.IsAtendimento)
            string unidadeNome = char.ToUpper(unidade.Localizacao[0]) + unidade.Localizacao.Substring(1).ToLower();
            <a href="#" id="@btnUnidade" class="btn btn-info unidade" style="font-size:12px;">@unidadeNome</a>

        }

    </div>
}

<div id="MapaLeitosTable"></div>

<script type="text/javascript">

    $(document).ready(function () {

        var _$MapaLeitosTable = $('#MapaLeitosTable');
        ////console.log('tipoAtendimento: ', $('#tipoAtendimento').val());

        var tipoAtendimento = $('#tipoAtendimento').val();

        // AtendimentosLeitosMov Modal
        var _createOrEditModal = new app.ModalManager({
            viewUrl: abp.appPath + 'Mpa/AtendimentoLeitoMov/CriarOuMapaLeitorModal',
            scriptUrl: abp.appPath + 'Areas/Mpa/Views/Aplicacao/Atendimentos/Internacoes/Home/MapaLeitos/_CriarOuEditarModal.js',
            modalClass: 'TransferenciaLeitoMovModalViewModel'
        });

        var _modalAlta = new app.ModalManager({
            viewUrl: abp.appPath + 'Mpa/AtendimentoLeitoMov/AltaModal',
            scriptUrl: abp.appPath + 'Areas/Mpa/Views/Aplicacao/Atendimentos/Altas/Alta/_CriarOuEditarModal.js',
            modalClass: 'AltaModalViewModel'
        });

        var _historicoLeito = new app.ModalManager({
            viewUrl: abp.appPath + 'Mpa/AtendimentoLeitoMov/HistoricoLeitoModal',
            scriptUrl: abp.appPath + 'Areas/Mpa/Views/Aplicacao/Atendimentos/Internacoes/Home/MapaLeitos/_HistoricoLeito.js',
            modalClass: 'HistoricoLeitoModalViewModel'
        });


        window.carregarLeitos = function () {
            debugger;
            _$MapaLeitosTable.jtable('load', null);
        }

        _$MapaLeitosTable.jtable({

            title: app.localize('Leitos'),
            paging: true,
            sorting: true,
            multiSorting: true,

            actions: {
                listAction: {
                    //method: abp.services.app.leito.listarPorUnidade,
                    method: abp.services.app.leito.listarPorUnidadePaginado,
                    data: 'Internado'
                }
            },

            fields: {
                id: {
                    key: true,
                    list: false
                }
                ,
                actions: {
                    title: app.localize('Actions'),
                    width: '7%',
                    sorting: false,
                    display: function (data) {
                        var $span = $('<span></span>');
                        if (data.record.leito && data.record.leito.leitoStatus && data.record.leito.leitoStatus.id != 1 && data.record.leito.leitoStatus.id != 3 && data.record.leito.leitoStatus.id != 4 && data.record.leito.leitoStatus.id != 5) {
                            $('<button class="btn btn-default btn-xs" title="' + app.localize('Transferir') + '"><i class="fa fa-retweet"></i></button>')
                                .appendTo($span)
                                .click(function () {

                                    debugger;
                                    if (data.record.atendimentoAtual == null) {
                                        alert('Não existe paciente para transferencia.')
                                    }
                                    else {
                                        _createOrEditModal.open({ data: data.record });
                                    }
                                });

                            $('<button class="btn btn-default btn-xs" title="' + app.localize('Alta') + '"><i class="fa fa-blind fa-3"></i></button>')
                                .appendTo($span)
                                .click(function () {
                                    if (data.record.atendimentoAtual == null) {
                                        alert('Não existe paciente para alta.')
                                    }
                                    else {
                                        _modalAlta.open({ input: data.record });
                                    }
                                });


                            $('<button class="btn btn-default btn-xs" title="' + app.localize('Histórico') + '"><i class="fa fa-history fa-3"></i></button>')
                                .appendTo($span)
                                .click(function () {
                                    if (data.record.atendimentoAtual == null) {
                                        alert('Não existe paciente para histórico.')
                                    }
                                    else {
                                        _historicoLeito.open({ data: data.record });
                                    }
                                });

                        }


                        if (data.record.leito && data.record.leito.leitoStatus && data.record.leito.leitoStatus.id != 2) {

                            $('<select class="form-control">'
                                + '<option value="" selected></option> '
                                + ' <option value="1">Vago</option>'
                                + '<option value="3">Interditado</option>'
                                + '<option value="4">Em Manutenção</option>'
                                + '<option value="5">Reservado</option>' +

                                // + 'onChange={(val)=> alterarstatus({leito:' + data.record.leito + ', value: val.value })}'

                                +'</select>').appendTo($span)
                                .change(t => alterarstatus({ leito: data.record.leito, status: t.delegateTarget.value }));

                        }


                        return $span;
                    }
                }
                ,
                codigo: {
                    title: app.localize('Codigo'),
                    width: '2%',
                    display: function (data) {
                        if (data.record.leito) {
                            return data.record.leito.codigo;
                        }
                    }
                }
                ,
                status: {
                    title: app.localize('Status'),
                    width: '5%',
                    display: function (data) {

                        if (data.record.leito && data.record.leito.leitoStatus) {
                            var cor = data.record.leito.leitoStatus.cor;
                            var descricao = data.record.leito.leitoStatus.descricao;
                            return '<div style="text-align:center; display:inline-block;">   <span style="display:inline-block; width:20px; height:20px;  text-align:center; background-color: ' + cor + '; border-radius: 25px;">  </span> </div>    ' + descricao;
                        }
                    }
                }
                ,
                leito: {
                    title: app.localize('Leito'),
                    width: '4%',
                    display: function (data) {
                        if (data.record.leito) {
                            return data.record.leito.descricao;
                        }
                    }
                }
                ,

                unidadeOrganizacional: {
                    title: app.localize('Local'),
                    width: '6%',
                    display: function (data) {
                        if (data.record.leito && data.record.leito.unidadeOrganizacional) {
                            return data.record.leito.unidadeOrganizacional.localizacao;
                        }
                    }
                }
                ,

                //dataInicial: {
                //    title: app.localize('DataInicial'),
                //    width: '5%',
                //    display: function (data) {
                //        if (data.record.atendimento) {
                //            return moment(data.record.atendimento.dataRegistro).format('L');
                //        }
                //    }
                //}
                //,
                dataInternacao: {
                    title: app.localize('DataInternacao'),
                    width: '5%',
                    display: function (data) {

                        // Status - se nao estiver ocupado, NAO PODE EXIBIR PACIENTE OBVIAMENTE
                        if (data.record.leito && data.record.leito.leitoStatus) {
                            if (data.record.leito.leitoStatus.id != 2) {
                                return '';
                            }
                        }

                        if (data.record.atendimentoAtual) {
                            return moment(data.record.atendimentoAtual.dataRegistro).format('L LT');
                        }

                    }
                }
                ,
                paciente: {
                    title: app.localize('Paciente'),
                    width: '10%',
                    display: function (data) {

                        // Status - se nao estiver ocupado, NAO PODE EXIBIR PACIENTE OBVIAMENTE
                        // NAO DEVERIA VIR ATENDIMENTO ASSOCIADO QUANDO O LEITO ESTA VAGO (PROBLEMA DE IMPLEMENTACAO NO BACK-END)
                        //
                        if (data.record.leito && data.record.leito.leitoStatus) {
                            if (data.record.leito.leitoStatus.id != 2) {
                                return '';
                            }
                        }

                        if (data.record.atendimentoAtual) {
                            //debugger;
                            if (data.record.atendimentoAtual.paciente) {
                                var $spanPaciente = $('<span>' + data.record.atendimentoAtual.paciente.nomeCompleto + '</span>');
                                var $span = $('<span></span>');
                                var d1 = new Date();
                                var d2 = new Date(data.record.atendimentoAtual.dataAltaMedica);
                                if (d2 > d1) {
                                    $('<div style="text-align:center; display:inline-block;">   <span style="display:inline-block; width:20px; height:20px;  text-align:center; background-color:#68a841; border-radius: 25px;"></span> - </div>').appendTo($span);
                                }
                                $spanPaciente.appendTo($span);

                                return $span;
                            }
                        }
                    }
                }
                ,
                tipoAcomodacao: {
                    title: app.localize('Tipo'),
                    width: '5%',
                    display: function (data) {
                        if (data.record.leito && data.record.leito.tipoAcomodacao) {
                            return data.record.leito.tipoAcomodacao.descricao;
                        }
                    }
                }
                ,
                extra: {
                    title: app.localize('Extra'),
                    width: '3%',
                    display: function (data) {
                        if (data.record.leito && data.record.leito.extra) {
                            return '<div style="text-align:center;">' + '<span class="label label-success content-center text-center">' + app.localize('Yes') + '</span>' + '</div>';
                        } else {
                            return '<div style="text-align:center;">' + '<span class="label label-default content-center text-center">' + app.localize('No') + '</span>' + '</div>';
                        }

                    }
                }
                ,
                dataAtualizacao: {
                    title: app.localize('DataAtualizacao'),
                    width: '5%',
                    display: function (data) {

                        return moment(data.record.leito.dataAtualizacao).format('L');

                        //if (data.record.atendimentoLeitoMov) {
                        //    debugger

                        //    if (data.record.atendimentoLeitoMov.dataAtualizacao) {
                        //        return moment(data.record.atendimentoLeitoMov.dataAtualizacao).format('L');
                        //    }
                        //    else {
                        //        return 'teste';
                        //    }

                        //}

                    }
                },
            }
        });


        //_$MapaLeitosTable.jtable('load', null);
        //window.refreshLeitos = function () {
        //    //console.log('refreshLeitos');
        //    _$MapaLeitosTable.jtable('load', {
        //        filtro: $('#MapaLeitoTableFilter').val()
        //    });
        //}
        function temp() { }

        function GetLeitosButton(reload) {
            ////console.log("filtro: ", $('#MapaLeitoTableFilter').val())
            //_$MapaLeitosTable.jtable('load', {
            //        filtro: $('#MapaLeitoTableFilter').val()
            //    });
            debugger;

            var filtro = $('#MapaLeitoTableFilter').val();
            _$MapaLeitosTable.jtable('load', {
                filtro: filtro,
                empresaId: $('#empresa-id').val(),
                somenteInternados: $('#somente-internados').is(':checked'),
                somenteVagos: $('#somente-vagos').is(':checked'),
                todos: $('#todos').is(':checked')
            });
        }

        $('.unidade').click(function (e) {
            e.preventDefault;
            // //console.log("unidade");
            debugger;
            _$MapaLeitosTable.jtable('load', {
                uo: this.id, somenteInternados: $('#somente-internados').is(':checked'), somenteVagos: $('#somente-vagos').is(':checked'),
                todos: $('#todos').is(':checked')
            });
            //console.log('this.id: ', this.id);
        });

        $('.loadJtable').click(function (e) {
            debugger;

            _$MapaLeitosTable.jtable('load', {
                empresaId: $('#empresa-id').val()
                , somenteInternados: $('#somente-internados').is(':checked'),
                somenteVagos: $('#somente-vagos').is(':checked'),
                todos: $('#todos').is(':checked')
            });
            //console.log("loadJtable");
        });

        $('.novo-relatorio').click(function () {
            //window.location.href = "/Mpa/AtendimentoRelatorio/Index";

            window.open("/Mpa/AtendimentoRelatorio/Index");

        });

        _$MapaLeitosTable.jtable('load', {
            tipoAtendimento: tipoAtendimento,
            empresaId: $('#empresa-id').val(),
            somenteInternados: $('#somente-internados').is(':checked'),
            somenteVagos: $('#somente-vagos').is(':checked'),
            todos: $('#todos').is(':checked')
        });

        $('#GetLeitosButton').click(function (e) {
            e.preventDefault();
            GetLeitosButton();
        });

        abp.event.on('app.CriarOuEditarLeitoMovimentoModalSaved', function () {

            debugger;
            GetLeitosButton();
        });

        $('#empresa-id').select2({
            allowClear: true,
            placeholder: app.localize("SelecioneLista"),
            ajax: {
                url: '/api/services/app/empresa/ListarDropdownPorUsuario',
                dataType: 'json',
                delay: 250,
                method: 'Post',
                data: function (params) {
                    if (params.page == undefined)
                        params.page = '1';
                    return {
                        search: params.term,
                        page: params.page,
                        totalPorPagina: 10
                    };
                },
                processResults: function (data, params) {
                    params.page = params.page || 1;

                    return {
                        results: data.result.items,
                        pagination: {
                            more: (params.page * 10) < data.result.totalCount
                        }
                    };
                },
                cache: true
            },
            escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
            minimumInputLength: 0
        });
        $('.select2').css('width', '100%');


        function alterarstatus(input) {
            abp.message.confirm(
                app.localize('AlterarStatusWarning', input.leito.descricao),
                function (isConfirmed) {
                    if (isConfirmed) {

                        debugger;

                        abp.services.app.leito.alterarStausLeito(input.leito.id, input.status)
                            .done(function () {

                                abp.notify.success(app.localize('ResetSuccessfully'));
                                GetLeitosButton();
                            });
                    }
                }
            );
        }

    });
</script>