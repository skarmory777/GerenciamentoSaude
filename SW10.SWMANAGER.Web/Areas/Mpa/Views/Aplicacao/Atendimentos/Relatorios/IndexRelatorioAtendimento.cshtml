@model SW10.SWMANAGER.Web.Areas.Mpa.Models.Aplicacao.Atendimentos.Relatorios.FiltroModel

<div class="row margin-bottom-5">
    <div class="col-xs-6">
        <div class="page-head">
            <div class="page-title">
                <h1>
                    <span>@L("RelatorioAtendimento")</span>
                </h1>
            </div>
        </div>
    </div>
</div>
<div class="portlet light margin-bottom-0">
    <div class="portlet-body">
        <div class="form">
            <div class="form-body" enter-key="vm.getEntradas()">
                <div class="row margin-bottom-10">
                    <div class="col-sm-1">
                    </div>
                    <div class="form-group col-md-3 text-left" style="padding-top:2%">
                        <button type="button" id="btn-retorna-internacoes" class="btn"><i class="fa fa-mail-reply"></i>    Internações</button>
                        <button type="button" id="btn-retorna-atendimentos" class="btn"><i class="fa fa-mail-reply"></i>    Ambulatório/Emergência</button>
                    </div>
                    <div class="form-group col-md-3 text-right">
                        @Html.LabelFor(model => model.Empresa, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DropDownListFor(model => model.Empresa, Model.Empresas, new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-5 text-left" style="padding-top:2%">
                        <button type="button" id="btnVisualizar" class="btn btn-primary blue"><i class="fa fa-search"></i>Visualizar</button>
                        <div style="display:inline-block; width:10px;"></div>
                        <input id="sintetico" type="checkbox" class="form-control icheck checkbox-inline" value="true" />&nbsp;
                        <label for="sintetico">@L("Sintetico")</label>
                    </div>
                    <div id="AdvacedRelatorioAtendimentosFiltersArea" style="display: none">
                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">@L("UnidadeOrganizacional")</label>
                                    <select name="UnidadeOrganizacionalId" id="unidade-organizacional-id" class="form-control select2 select2UnidadeOrganizacional"></select>
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">@L("Medico")</label>
                                    <select name="MedicoId" id="medico-id" class="form-control select2 select2Medico"></select>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">@L("Especialidade")</label>
                                    <select name="EspecialidadeId" id="especialidade-id" class="form-control select2  select2Especialidade"></select>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">@L("Guia")</label>
                                    <select name="GuiaId" id="guia-id" class="form-control select2 select2Guia"></select>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">@L("Origem")</label>
                                    <select name="OrigemId" id="origem-id" class="form-control select2 select2Origem"></select>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row" style="margin-bottom:20px">
                        <div class="col-md-12">
                            <span id="ShowAdvancedFiltersSpan" class="clickable-item text-muted"><i class="fa fa-angle-down"></i> @L("ShowFilters")</span>
                            <span id="HideAdvancedFiltersSpan" class="clickable-item text-muted" style="display: none"><i class="fa fa-angle-up"></i> @L("HideFilters")</span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div id="relatorio-atendimento" style="margin:auto; width:90%; height:1000px; border:7px solid #6da6c6; border-radius: 5px;"></div>
                        </div>
                    </div>
                </div>
            </div>

            @section Scripts
{
                <script src="~/libs/PDFObject/pdfobject.js"></script>
                <script>
                    $(function () {

                        // Retornar a "Internacoes"
                        $('#btn-retorna-internacoes').on('click', function (e) {
                            window.location.href = "/Mpa/Internacoes";
                        });

                        $('#btn-retorna-atendimentos').on('click', function (e) {
                            window.location.href = "/Mpa/AmbulatorioEmergencias";
                        });


                        $("#btnVisualizar").click(function () {
                            var sintetico = $('#sintetico').swChkValor();
                            exibirRelatorio(sintetico);
                        });

                        // Novo formato (exibindo direto em pdf)


                        function exibirRelatorio() {
                            var caminho = '@Url.Action("GerarPDF", "AtendimentoRelatorio")';
                            PDFObject.embed(caminho, "#relatorio-atendimento");
                        }

                        //function renderizarRelatorio(sintetico) {
                        //    var empresa = $("#Empresa");
                        //    var caminho = '';
                        //    if (sintetico) {
                        //        caminho = "/Mpa/AtendimentoRelatorio/IndexRelatorioAtendimento";
                        //    } else {
                        //        // teste para remover duplicatas
                        //        caminho = "/Mpa/AtendimentoRelatorio/IndexRelatorioAtendimento";

                        //        //   caminho = "/Mpa/AtendimentoRelatorio/ReltorioLeitosPdf?empresaId=" + empresa.val();
                        //    }
                        //    PDFObject.embed(caminho, "#relatorio-leitos");
                        //}
                        // Fim - novo formato

                        exibirRelatorio();
                        //renderizarRelatorio();
                    });



                    $('#ShowAdvancedFiltersSpan').click(function () {
                        $('#ShowAdvancedFiltersSpan').hide();
                        $('#HideAdvancedFiltersSpan').show();
                        $('#AdvacedRelatorioAtendimentosFiltersArea').slideDown();
                    });

                    $('#HideAdvancedFiltersSpan').click(function () {
                        $('#HideAdvancedFiltersSpan').hide();
                        $('#ShowAdvancedFiltersSpan').show();
                        $('#AdvacedRelatorioAtendimentosFiltersArea').slideUp();
                    });


                    //Filtros Avançados
                    $(".select2Guia").select2({
                        ajax: {
                            url: "/api/services/app/faturamentoguia/ListarDropdown",
                            dataType: 'json',
                            delay: 250,
                            method: 'Post',
                            data: function (params) {
                                if (params.page == undefined)
                                    params.page = '1';
                                return {
                                    search: params.term,
                                    page: params.page,
                                    totalPorPagina: 10
                                };
                            },
                            processResults: function (data, params) {
                                params.page = params.page || 1;
                                return {
                                    results: data.result.items,
                                    pagination: {
                                        more: (params.page * 10) < data.result.totalCount
                                    }
                                };
                            },
                            cache: true
                        },
                        escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                        minimumInputLength: 0
                    });

                    $(".select2Medico").select2({
                        ajax: {
                            url: "/api/services/app/medico/ListarDropdown",
                            dataType: 'json',
                            delay: 250,
                            method: 'Post',
                            data: function (params) {
                                if (params.page == undefined)
                                    params.page = '1';
                                return {
                                    search: params.term,
                                    page: params.page,
                                    totalPorPagina: 10
                                };
                            },
                            processResults: function (data, params) {
                                params.page = params.page || 1;
                                return {
                                    results: data.result.items,
                                    pagination: {
                                        more: (params.page * 10) < data.result.totalCount
                                    }
                                };
                            },
                            cache: true
                        },
                        escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                        minimumInputLength: 0
                    });

                    $(".select2Especialidade").select2({
                        ajax: {
                            url: "/api/services/app/especialidade/ListarDropdown",
                            dataType: 'json',
                            delay: 250,
                            method: 'Post',
                            data: function (params) {
                                if (params.page == undefined)
                                    params.page = '1';
                                return {
                                    search: params.term,
                                    page: params.page,
                                    totalPorPagina: 10
                                };
                            },
                            processResults: function (data, params) {
                                params.page = params.page || 1;
                                return {
                                    results: data.result.items,
                                    pagination: {
                                        more: (params.page * 10) < data.result.totalCount
                                    }
                                };
                            },
                            cache: true
                        },
                        escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                        minimumInputLength: 0
                    });

                    $(".select2UnidadeOrganizacional").select2({
                        ajax: {
                            url: "/api/services/app/unidadeorganizacional/ListarDropdown",
                            dataType: 'json',
                            delay: 250,
                            method: 'Post',
                            data: function (params) {
                                if (params.page == undefined)
                                    params.page = '1';
                                return {
                                    search: params.term,
                                    page: params.page,
                                    totalPorPagina: 10
                                };
                            },
                            processResults: function (data, params) {
                                params.page = params.page || 1;
                                return {
                                    results: data.result.items,
                                    pagination: {
                                        more: (params.page * 10) < data.result.totalCount
                                    }
                                };
                            },
                            cache: true
                        },
                        escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                        minimumInputLength: 0
                    });

                    $(".select2Origem").select2({
                        ajax: {
                            url: "/api/services/app/origem/ListarDropdown",
                            dataType: 'json',
                            delay: 250,
                            method: 'Post',
                            data: function (params) {
                                if (params.page == undefined)
                                    params.page = '1';
                                return {
                                    search: params.term,
                                    page: params.page,
                                    totalPorPagina: 10
                                };
                            },
                            processResults: function (data, params) {
                                params.page = params.page || 1;
                                return {
                                    results: data.result.items,
                                    pagination: {
                                        more: (params.page * 10) < data.result.totalCount
                                    }
                                };
                            },
                            cache: true
                        },
                        escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                        minimumInputLength: 0
                    });
                    $('.select2').css('width', '100%');

                </script>
            }
