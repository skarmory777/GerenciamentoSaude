@using Abp.Authorization.Users
@using Abp.Extensions
@using SW10.SWMANAGER.Web.Areas.Mpa.Models.Common.Modals
@using SW10.SWMANAGER.Web.Areas.Mpa.Views.SMWEHelpers
@model SW10.SWMANAGER.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel

@Html.Partial("~/Areas/Mpa/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(Model.IsEditMode ? (L("EditUser") + ": " + Model.User.UserName) : L("CreateNewUser")))

<div class="modal-body">

    <div class="tabbable-line">
        <ul class="nav nav-tabs ">
            <li class="active">
                <a href="#UserInformationsTab" data-toggle="tab" aria-expanded="true">
                    @L("UserInformations")
                </a>
            </li>
            <li class="">
                <a href="#RolesTab" data-toggle="tab" aria-expanded="false">
                    @L("Roles") <b class="badge badge-primary"><span id="assigned-role-count">@Model.AssignedRoleCount</span></b>
                </a>
            </li>
            <li class="">
                <a href="#EmpresasTab" data-toggle="tab" aria-expanded="false">
                    @L("Empresas") <b class="badge badge-primary"><span id="assigned-empresas-count">@Model.AssignedEmpresasCount</span></b>
                </a>
            </li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane active" id="UserInformationsTab">

                <form name="UserInformationsForm" role="form" novalidate class="form-validation">

                    @if (Model.IsEditMode)
                    {
                    <input type="hidden" name="Id" value="@Model.User.Id" />
                    }

                    <div class="row">
                        <div class="col-sm-4 text-center">
                            @if (Model.ProfilePictureId.HasValue)
                            {
                            <img src="@Url.Action("GetProfilePictureById", "Profile", new { area = string.Empty })?id=@(Model.ProfilePictureId.Value)" width="128" height="128" class="img-thumbnail img-rounded user-edit-dialog-profile-image" />
                            }
                            else
                            {
                            <img src="@Url.Content("~/Common/Images/default-profile-picture.png")" width="128" height="128" class="img-thumbnail img-rounded user-edit-dialog-profile-image" />
                            }
                        </div>
                        <div class="col-sm-8">
                            <div class="form-group form-md-line-input form-md-floating-label no-hint">
                                <input class="form-control@(Model.User.Name.IsNullOrEmpty() ? "" : " edited")" value="@Model.User.Name" type="text" name="Name" required maxlength="@SW10.SWMANAGER.Authorization.Users.User.MaxNameLength">
                                <label>@L("Name")</label>
                            </div>

                            <div class="form-group form-md-line-input form-md-floating-label no-hint">
                                <input type="text" name="Surname" class="form-control@(Model.User.Surname.IsNullOrEmpty() ? "" : " edited")" value="@Model.User.Surname" required maxlength="@SW10.SWMANAGER.Authorization.Users.User.MaxSurnameLength">
                                <label>@L("Surname")</label>
                            </div>
                        </div>
                    </div>

                    @using (Html.Row())
                    {
                        using (Html.Select2For(m => m.User.MedicoId, "profissional", "profissionalClasse", L("Profissional"), Model.User.MedicoId.ToString(), Model.User.Medico != null ? Model.User.Medico.NomeCompleto : "Selecione", "medico/listarDropdown", "", 12, false, true)) { }
                    }

                    <div class="form-group form-md-line-input form-md-floating-label no-hint">
                        <input type="email" name="EmailAddress" class="form-control@(Model.User.EmailAddress.IsNullOrEmpty() ? "" : " edited")" value="@Model.User.EmailAddress" required maxlength="@AbpUserBase.MaxEmailAddressLength">
                        <label>@L("EmailAddress")</label>
                    </div>

                    <div class="form-group form-md-line-input form-md-floating-label no-hint">
                        <input type="text" name="PhoneNumber" class="form-control@(Model.User.PhoneNumber.IsNullOrEmpty() ? "" : " edited")" value="@Model.User.PhoneNumber" maxlength="@SW10.SWMANAGER.Authorization.Users.User.MaxPhoneNumberLength">
                        <label>@L("PhoneNumber")</label>
                    </div>

                    <div class="form-group form-md-line-input form-md-floating-label">
                        <input type="text" @Html.Raw(!Model.CanChangeUserName ? "disabled=\"disabled\"" : "") name="UserName" class="form-control@(Model.User.EmailAddress.IsNullOrEmpty() ? "" : " edited")" value="@Model.User.UserName" required maxlength="@AbpUserBase.MaxUserNameLength">
                        <label>@L("UserName")</label>
                        @if (!Model.CanChangeUserName)
                        {
                        <span class="help-block">@L("CanNotChangeAdminUserName")</span>
                        }
                    </div>

                    <div class="md-checkbox-list">
                        <div class="md-checkbox">
                            <input id="EditUser_SetRandomPassword" class="md-check" type="checkbox" name="SetRandomPassword" value="true" @Html.Raw(Model.IsEditMode ? "" : "checked=\"checked\"") />
                            <label for="EditUser_SetRandomPassword">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @L("SetRandomPassword")
                            </label>
                        </div>
                    </div>

                    <div class="form-group form-md-line-input form-md-floating-label no-hint" style="@(Model.IsEditMode ? "display:block" : "display:none")">
                        <input id="EditUser_Password" type="password" name="Password" class="form-control" maxlength="@SW10.SWMANAGER.Authorization.Users.User.MaxPlainPasswordLength" minlength="@SW10.SWMANAGER.Authorization.Users.User.MinPlainPasswordLength">
                        @*<input type="hidden" value="@Model.User.Password" name="Password" id="EditUser_Password"/>*@
                        <label>@L("Password")</label>
                    </div>

                    <div class="form-group form-md-line-input form-md-floating-label no-hint" style="@(Model.IsEditMode ? "display:block" : "display:none")">
                        <input type="password" name="PasswordRepeat" class="form-control" maxlength="@SW10.SWMANAGER.Authorization.Users.User.MaxPlainPasswordLength" minlength="@SW10.SWMANAGER.Authorization.Users.User.MinPlainPasswordLength" equalto="#EditUser_Password">
                        <label>@L("PasswordRepeat")</label>
                    </div>

                    <div class="md-checkbox-list">
                        <div class="md-checkbox">
                            <input id="EditUser_ShouldChangePasswordOnNextLogin" class="md-check" type="checkbox" name="ShouldChangePasswordOnNextLogin" value="true" @Html.Raw(Model.User.ShouldChangePasswordOnNextLogin ? "checked=\"checked\"" : "")>
                            <label for="EditUser_ShouldChangePasswordOnNextLogin">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @L("ShouldChangePasswordOnNextLogin")
                            </label>
                        </div>
                        <div class="md-checkbox">
                            <input id="EditUser_SendActivationEmail" class="md-check" type="checkbox" name="SendActivationEmail" value="true" @Html.Raw(Model.IsEditMode ? "" : "checked=\"checked\"")>
                            <label for="EditUser_SendActivationEmail">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @L("SendActivationEmail")
                            </label>
                        </div>
                        <div class="md-checkbox">
                            <input id="EditUser_IsActive" class="md-check" type="checkbox" name="IsActive" value="true" @Html.Raw(Model.User.IsActive ? "checked=\"checked\"" : "")>
                            <label for="EditUser_IsActive">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @L("Active")
                            </label>
                        </div>
                    </div>
                    <div class="row enable-ip-control" style="padding-top:5px">
                        <label class="col-md-3">@L("EnableIpControl")</label>
                        <div class="md-checkbox col-md-3">
                            <input id="EditUser_IsHabilitaControleDeIpSim" class="md-check" type="checkbox" value="true" @Html.Raw(Model.User.IsHabilitaControleDeIp.HasValue && Model.User.IsHabilitaControleDeIp.Value ? "checked=\"checked\"" : "")>
                            <label for="EditUser_IsHabilitaControleDeIpSim">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                Sim
                            </label>
                        </div>
                        <div class="md-checkbox col-md-3">
                            <input id="EditUser_IsHabilitaControleDeIpNao" class="md-check" type="checkbox"  value="false" @Html.Raw(Model.User.IsHabilitaControleDeIp.HasValue && !Model.User.IsHabilitaControleDeIp.Value ? "checked=\"checked\"" : "")>
                            <label for="EditUser_IsHabilitaControleDeIpNao">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                Não
                            </label>
                        </div>
                         <div class="md-checkbox col-md-3">
                            <input id="EditUser_IsHabilitaControleDeIpNda" class="md-check" type="checkbox" value="null" @Html.Raw(!Model.User.IsHabilitaControleDeIp.HasValue ? "checked=\"checked\"" : "")>
                            <label for="EditUser_IsHabilitaControleDeIpNda">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                Não definido
                            </label>
                        </div>
                    </div>
                </form>

            </div>
            <div class="tab-pane" id="RolesTab">

                <div class="md-checkbox-list user-role-checkbox-list">
                    @foreach (var role in Model.Roles)
                    {
                    <div class="md-checkbox">
                        <input id="EditUser_@(role.RoleName)" class="md-check" type="checkbox" name="@(role.RoleName)" value="true" @Html.Raw(role.IsAssigned ? "checked=\"checked\"" : "")>
                        <label for="EditUser_@(role.RoleName)">
                            <span class="inc"></span>
                            <span class="check"></span>
                            <span class="box"></span>
                            @role.RoleDisplayName
                        </label>
                    </div>
                    }
                </div>

            </div>
            <div class="tab-pane" id="EmpresasTab">

                <div class="md-checkbox-list user-empresa-checkbox-list">
                    @foreach (var empresa in Model.Empresas)
                    {
                        <div class="md-checkbox">
                            <input id="EditUser_@(empresa.Id)" class="md-check" type="checkbox" name="@(empresa.Id)" value="true" @Html.Raw(empresa.Id.IsIn(Model.UserEmpresas.Select(m => m.EmpresaId).ToArray()) ? "checked=\"checked\"" : "")>
                            <label for="EditUser_@(empresa.Id)">
                                <span class="inc"></span>
                                <span class="check"></span>
                                <span class="box"></span>
                                @empresa.NomeFantasia
                            </label>
                        </div>
                    }
                </div>

            </div>
        </div>
    </div>

</div>

@Html.Partial("~/Areas/Mpa/Views/Common/Modals/_ModalFooterWithSaveAndCancel.cshtml")
