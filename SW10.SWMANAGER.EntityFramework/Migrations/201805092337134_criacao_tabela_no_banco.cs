namespace SW10.SWMANAGER.Migrations
{
    using System.Collections.Generic;
    using System.Data.Entity.Migrations;

    public partial class criacao_tabela_no_banco : DbMigration
    {
        public override void Up()
        {
            CreateTable(
                "dbo.Sis_Ambulatorio",
                c => new
                {
                    Id = c.Long(nullable: false, identity: true),
                    IDAmbulatorio = c.Int(),
                    CodAmbulatorio = c.String(),
                    DataInicio = c.DateTime(),
                    IsRevisao = c.Boolean(),
                    IsHoraMarcada = c.Boolean(),
                    DataRetorno = c.DateTime(),
                    IDAtendRevisao = c.Int(),
                    IDAlta = c.Int(),
                    StatusProntoAtend = c.Int(),
                    NumeroSeq = c.String(),
                    TipoConsulta = c.String(),
                    IsVacina = c.Boolean(),
                    DataExame = c.DateTime(),
                    IDUsuarioLiberacao = c.Int(),
                    DataLiberacao = c.DateTime(),
                    IDPrioridadeAtendimento = c.Int(),
                    IsAltaRevelia = c.Boolean(),
                    IDUsuarioRevelia = c.Int(),
                    DataSolicitacao = c.DateTime(),
                    Diagnostico = c.String(),
                    Tratamento = c.String(),
                    DadosClinicos = c.String(),
                    PrimConsulta = c.String(),
                    IsAlergiaSzn = c.Boolean(),
                    QualAlergiaSzn = c.String(),
                    DataPreAtend = c.DateTime(),
                    CodAmbulatorioSUS = c.Int(),
                    IDSetor = c.Int(),
                    DataAltaAmbulatorial = c.DateTime(),
                    IDAltaAmbulatorial = c.Int(),
                    IDUsuarioAltaInc = c.Int(),
                    IDMedPreAtend = c.Int(),
                    IsAtendendo = c.Boolean(),
                    IDMedicoAtendendo = c.Int(),
                    DataAtendAmbulatorial = c.DateTime(),
                    IDProtocoloEmergencia = c.Int(),
                    DataIniPreAtend = c.DateTime(),
                    DataIniInfoClinicas = c.DateTime(),
                    DataFimPreAtend = c.DateTime(),
                    DataFimInfoClinicas = c.DateTime(),
                    DataAltaMedica = c.DateTime(),
                    DataAltaAdministrativa = c.DateTime(),
                    IsSistema = c.Boolean(nullable: false),
                    Codigo = c.String(maxLength: 10),
                    Descricao = c.String(),
                    IsDeleted = c.Boolean(nullable: false),
                    DeleterUserId = c.Long(),
                    DeletionTime = c.DateTime(),
                    LastModificationTime = c.DateTime(),
                    LastModifierUserId = c.Long(),
                    CreationTime = c.DateTime(nullable: false),
                    CreatorUserId = c.Long(),
                },
                annotations: new Dictionary<string, object>
                {
                    { "DynamicFilter_Sis_Ambulatorio_SoftDelete", "EntityFramework.DynamicFilters.DynamicFilterDefinition" },
                })
                .PrimaryKey(t => t.Id);

            CreateTable(
                "dbo.Sis_Atendimento",
                c => new
                {
                    Id = c.Long(nullable: false, identity: true),
                    IDAtendimento = c.Int(),
                    IDEmpresa = c.Int(),
                    IDFilial = c.Int(),
                    IDConvenioAtend = c.Int(),
                    IDOrigem = c.Int(),
                    CodAtendimento = c.String(),
                    IDPaciente = c.Int(),
                    DataAtendimento = c.DateTime(),
                    IDMedico = c.Int(),
                    IDEspecialidade = c.Int(),
                    IDMedicoIndica = c.Int(),
                    IDUsuarioInclusao = c.Int(),
                    DataInclusao = c.DateTime(),
                    IDUsuarioAlteracao = c.Int(),
                    DataAlteracao = c.DateTime(),
                    IDUsuarioCancelamento = c.Int(),
                    DataCancelamento = c.DateTime(),
                    IDAteMotCancelamento = c.Int(),
                    IsSincronizado = c.Boolean(),
                    IsAlterado = c.Boolean(),
                    IDImportado = c.Int(),
                    Desativado = c.Boolean(),
                    System = c.Boolean(),
                    Hidden = c.Boolean(),
                    IDFilialSin = c.Int(),
                    AgudaCronica = c.String(),
                    PacienteCaixa = c.String(),
                    IDClinica = c.Int(),
                    IDAtendimentoStatus = c.Int(),
                    IDIndicadorAcidente = c.Int(),
                    IDRevisaoEntrega = c.Int(),
                    IDUsuarioRecebimento = c.Int(),
                    DataRecebimento = c.DateTime(),
                    IDUsuarioCancelaRecebimento = c.Int(),
                    DataCancelaRecebimento = c.DateTime(),
                    ObsRecebimento = c.String(),
                    IDUsuarioObsRecebimento = c.Int(),
                    DataObsRecebimento = c.DateTime(),
                    IsInternou = c.Boolean(),
                    IDUltUsuConfEmail = c.Boolean(),
                    IsSMSEnviado = c.Boolean(),
                    IsSMSConfirmado = c.Boolean(),
                    IDMedicoConsulta = c.Int(),
                    DataMedicoConsulta = c.DateTime(),
                    Mes = c.Int(),
                    Ano = c.Int(),
                    Idade = c.Int(),
                    JustificativaNumDeclNascVivo = c.String(),
                    IDAtendimentoInicial = c.Int(),
                    DataRetorno = c.DateTime(),
                    ObsRetorno = c.Binary(),
                    IDUsuarioRetorno = c.Int(),
                    IsEncaminhado = c.Int(),
                    DataConclusao = c.DateTime(),
                    IDEspecialidadeMedIndica = c.Int(),
                    IsSistema = c.Boolean(nullable: false),
                    Codigo = c.String(maxLength: 10),
                    Descricao = c.String(),
                    IsDeleted = c.Boolean(nullable: false),
                    DeleterUserId = c.Long(),
                    DeletionTime = c.DateTime(),
                    LastModificationTime = c.DateTime(),
                    LastModifierUserId = c.Long(),
                    CreationTime = c.DateTime(nullable: false),
                    CreatorUserId = c.Long(),
                },
                annotations: new Dictionary<string, object>
                {
                    { "DynamicFilter_Sis_Atendimento_SoftDelete", "EntityFramework.DynamicFilters.DynamicFilterDefinition" },
                })
                .PrimaryKey(t => t.Id);

            CreateTable(
                "dbo.Sis_ContaMedica",
                c => new
                {
                    Id = c.Long(nullable: false, identity: true),
                    IDContaMedica = c.Int(),
                    IDAtendimento = c.Int(),
                    IDConvenio = c.Int(),
                    IDPlano = c.Int(),
                    IDGuia = c.Int(),
                    IDFormatoMatricula = c.Int(),
                    Matricula = c.String(),
                    CodDependente = c.String(),
                    NumeroGuia = c.String(),
                    Titular = c.String(),
                    DtPagamento = c.DateTime(),
                    ValCarteira = c.DateTime(),
                    IdentAcompanhante = c.String(),
                    StatusEntrega = c.Int(),
                    SenhaAutorizacao = c.String(),
                    DiasAutorizados = c.Int(),
                    Observacao = c.Binary(),
                    IDPendenciaMotivo = c.Int(),
                    DataUltimaConferencia = c.DateTime(),
                    IDUsuarioConferencia = c.Int(),
                    IsSincronizado = c.Boolean(),
                    IsAlterado = c.Boolean(),
                    IDImportado = c.Int(),
                    IDFilialSin = c.Int(),
                    NumeroSeq = c.String(),
                    IDMedico = c.Int(),
                    GuiaPrincipal = c.String(),
                    IDLeitoTipo = c.Int(),
                    DataInicio = c.DateTime(),
                    DataFim = c.DateTime(),
                    IDAlta = c.Int(),
                    IsAutorizador = c.Boolean(),
                    DataAutorizacao = c.DateTime(),
                    TipoAtendimento = c.String(),
                    IDEmpresaPac = c.Int(),
                    DiaSerie1 = c.DateTime(),
                    DiaSerie2 = c.DateTime(),
                    DiaSerie3 = c.DateTime(),
                    DiaSerie4 = c.DateTime(),
                    DiaSerie5 = c.DateTime(),
                    DiaSerie6 = c.DateTime(),
                    DiaSerie7 = c.DateTime(),
                    DiaSerie8 = c.DateTime(),
                    DiaSerie9 = c.DateTime(),
                    DiaSerie10 = c.DateTime(),
                    DataEntrFolhaSala = c.DateTime(),
                    DataEntrDescCir = c.DateTime(),
                    DataEntrBolAnest = c.DateTime(),
                    DataEntrCDFilme = c.DateTime(),
                    IsSemAutorizacao = c.Boolean(),
                    IsAutorizado = c.Boolean(),
                    IndicacaoClinica = c.String(),
                    TrilhaCartao = c.String(),
                    DataValidadeSenha = c.DateTime(),
                    GuiaOperadora = c.String(),
                    IDUsuarioResponsavel = c.Int(),
                    DataUsuarioResponsavel = c.DateTime(),
                    IDUsuarioAlteracao = c.Int(),
                    DataAlteracao = c.DateTime(),
                    Ordem = c.Int(),
                    IsImprimeGuia = c.Boolean(),
                    IsComplementar = c.Boolean(),
                    IsSistema = c.Boolean(nullable: false),
                    Codigo = c.String(maxLength: 10),
                    Descricao = c.String(),
                    IsDeleted = c.Boolean(nullable: false),
                    DeleterUserId = c.Long(),
                    DeletionTime = c.DateTime(),
                    LastModificationTime = c.DateTime(),
                    LastModifierUserId = c.Long(),
                    CreationTime = c.DateTime(nullable: false),
                    CreatorUserId = c.Long(),
                },
                annotations: new Dictionary<string, object>
                {
                    { "DynamicFilter_Sis_ContaMedica_SoftDelete", "EntityFramework.DynamicFilters.DynamicFilterDefinition" },
                })
                .PrimaryKey(t => t.Id);

            CreateTable(
                "dbo.Sis_Internacao",
                c => new
                {
                    Id = c.Long(nullable: false, identity: true),
                    IDInternacao = c.Int(),
                    CodInternacao = c.String(),
                    IDLeito = c.Int(),
                    IDLeitoTipo = c.Int(),
                    DataAlta = c.DateTime(),
                    IDAlta = c.Int(),
                    TemAcompanhante = c.Boolean(),
                    Responsavel = c.String(),
                    EndResponsa = c.String(),
                    CompResponsa = c.String(),
                    CEPResponsa = c.String(),
                    IDBairroResponsa = c.Int(),
                    IDCidadeResponsa = c.Int(),
                    IDEstadoResponsa = c.Int(),
                    PaisResponsa = c.String(),
                    IdtResponsa = c.String(),
                    OrgEmisResponsa = c.String(),
                    EmisIdtResponsa = c.DateTime(),
                    CPFResponsa = c.String(),
                    CGCResponsa = c.String(),
                    IDEstadoPac = c.Int(),
                    StatusPront = c.Int(),
                    IDUsuarioPront = c.Int(),
                    DataPront = c.DateTime(),
                    NumObito = c.String(),
                    IDUsuarioAltaInc = c.Int(),
                    DataAltaInc = c.DateTime(),
                    IDUsuarioAltaAlt = c.Int(),
                    DataAltaAlt = c.DateTime(),
                    IDUsuarioAltaDel = c.Int(),
                    DataAltaDel = c.DateTime(),
                    IsEletiva = c.Boolean(),
                    IDCIDObito = c.Int(),
                    IsGestacao = c.Boolean(),
                    IsAborto = c.Boolean(),
                    IsTransMat = c.Boolean(),
                    IsCompPuerperio = c.Boolean(),
                    IsAtendRNSalaParto = c.Boolean(),
                    IsCompNeoNatal = c.Boolean(),
                    IsBxPeso = c.Boolean(),
                    IsCesarea = c.Boolean(),
                    IsNormal = c.Boolean(),
                    IsInternacaoObstetrica = c.Boolean(),
                    IsObitoNeoNatal = c.Boolean(),
                    SeObitoMulher = c.Int(),
                    QtdeObitoNeonatalPrecoce = c.Int(),
                    QtdeObitoNeonatalTardio = c.Int(),
                    NumDeclNascVivos1 = c.String(),
                    QtdeNascVivosTermo = c.Int(),
                    QtdeNascMortos = c.Int(),
                    QtdeNascVivosPrematuro = c.Int(),
                    NumDeclNascVivos2 = c.String(),
                    NumDeclNascVivos3 = c.String(),
                    NumDeclNascVivos4 = c.String(),
                    NumDeclNascVivos5 = c.String(),
                    TvTelefone = c.Int(),
                    QtdeAlta = c.Int(),
                    QtdeTransf = c.Int(),
                    SisPreNatal = c.String(),
                    JustificativaSUS20 = c.Binary(),
                    JustificativaSUS21 = c.Binary(),
                    JustificativaSUS22 = c.Binary(),
                    IDAcompanhante = c.Int(),
                    IsAlergiaSzn = c.Boolean(),
                    QualAlergiaSzn = c.String(),
                    TemCafe = c.Boolean(),
                    TemFralda = c.Boolean(),
                    TemRefeicao = c.Boolean(),
                    TemPernoite = c.Boolean(),
                    TemRefeicaoAcompanhante = c.Boolean(),
                    Cobertura = c.DateTime(),
                    DietaAtual = c.String(),
                    QuantFralda = c.Int(),
                    DataPrevisaoAlta = c.DateTime(nullable: false),
                    IDUsuarioPrevAltaInc = c.Int(),
                    DataPrevAltaInc = c.DateTime(),
                    IDUsuarioPrevAltaAlt = c.Int(),
                    DataPrevAltaAlt = c.DateTime(),
                    IDUsuarioPrevAltaDel = c.Int(),
                    DataPrevAltaDel = c.DateTime(),
                    IsSistema = c.Boolean(nullable: false),
                    Codigo = c.String(maxLength: 10),
                    Descricao = c.String(),
                    IsDeleted = c.Boolean(nullable: false),
                    DeleterUserId = c.Long(),
                    DeletionTime = c.DateTime(),
                    LastModificationTime = c.DateTime(),
                    LastModifierUserId = c.Long(),
                    CreationTime = c.DateTime(nullable: false),
                    CreatorUserId = c.Long(),
                },
                annotations: new Dictionary<string, object>
                {
                    { "DynamicFilter_Sis_Internacao_SoftDelete", "EntityFramework.DynamicFilters.DynamicFilterDefinition" },
                })
                .PrimaryKey(t => t.Id);

            CreateTable(
                "dbo.Sis_Paciente",
                c => new
                {
                    Id = c.Long(nullable: false, identity: true),
                    IDPaciente = c.Int(),
                    CodPaciente = c.String(),
                    Pai = c.String(),
                    Mae = c.String(),
                    CNS = c.String(),
                    Observacao = c.Binary(),
                    DataUltimaMalaDir = c.DateTime(),
                    RacaCor = c.String(),
                    IDEtnia = c.Int(),
                    IsSUS = c.Boolean(),
                    UsuarioWeb = c.String(),
                    SenhaWeb = c.String(),
                    IsRecebeEmail = c.Boolean(),
                    ValorEscala = c.String(),
                    IDReligiao = c.Int(),
                    Matricula = c.String(),
                    Categoria = c.String(),
                    GrauDependente = c.String(),
                    Escolaridade = c.Int(),
                    IsCartao = c.Boolean(),
                    NumDeclNascVivo = c.String(),
                    JustificativaNumDeclNascVivo = c.String(),
                    UsuarioAgendaWeb = c.String(),
                    SenhaAgendaWeb = c.String(),
                    IDEmpresaPac = c.Int(),
                    IDExterno = c.Int(),
                    IsSistema = c.Boolean(nullable: false),
                    Codigo = c.String(maxLength: 10),
                    Descricao = c.String(),
                    IsDeleted = c.Boolean(nullable: false),
                    DeleterUserId = c.Long(),
                    DeletionTime = c.DateTime(),
                    LastModificationTime = c.DateTime(),
                    LastModifierUserId = c.Long(),
                    CreationTime = c.DateTime(nullable: false),
                    CreatorUserId = c.Long(),
                },
                annotations: new Dictionary<string, object>
                {
                    { "DynamicFilter_Sis_Paciente_SoftDelete", "EntityFramework.DynamicFilters.DynamicFilterDefinition" },
                })
                .PrimaryKey(t => t.Id);

            CreateTable(
                "dbo.Sis_Pessoa",
                c => new
                {
                    Id = c.Long(nullable: false, identity: true),
                    IDPessoa = c.Int(),
                    IDPessoaTipo = c.Int(),
                    CodPessoa = c.String(),
                    Pessoa = c.String(),
                    Endereco = c.String(),
                    Complemento = c.String(),
                    IDBairro = c.Int(),
                    IDCidade = c.Int(),
                    IDEstado = c.Int(),
                    Pais = c.String(),
                    CEP = c.String(),
                    Nascimento = c.DateTime(nullable: false),
                    Sexo = c.String(),
                    EstadoCivil = c.String(),
                    IDInstrucao = c.Int(),
                    IDProfissao = c.Int(),
                    IDCobranca = c.Int(),
                    IDContaTesouraria = c.Int(),
                    IDMeioPagamento = c.Int(),
                    IDDocumentoTipo = c.Int(),
                    IDCentroCustoLocal = c.Int(),
                    IDNaturalidade = c.Int(),
                    Nacionalidade = c.String(),
                    Identidade = c.String(),
                    OrgaoEmissor = c.String(),
                    EmissaoIdentidade = c.DateTime(),
                    CPF = c.String(),
                    RazaoSocial = c.String(),
                    Nominal = c.String(),
                    CGC = c.String(),
                    InscricaoEstadual = c.String(),
                    InscricaoMunicipal = c.String(),
                    HomePage = c.String(),
                    Juridico = c.String(),
                    IsRecolheISS = c.String(),
                    TotalQuitado = c.String(),
                    SaldoAtual = c.String(),
                    TotalPrevisto = c.String(),
                    NumeroLancamentos = c.Int(),
                    DataUltimoLancamento = c.DateTime(),
                    DataInclusao = c.DateTime(),
                    IDUsuarioInclusao = c.Int(),
                    DataUltimaAlteracao = c.DateTime(),
                    IDUsuarioAlteracao = c.Int(),
                    IsMalaDireta = c.Boolean(),
                    IsSincronizado = c.Boolean(),
                    IsAlterado = c.Boolean(),
                    IDImportado = c.Int(),
                    Desativado = c.Boolean(),
                    System = c.Boolean(),
                    Hidden = c.Boolean(),
                    IDBanco1 = c.Int(),
                    Agencia1 = c.String(),
                    ContaCorrente1 = c.String(),
                    IDBanco2 = c.Int(),
                    Agencia2 = c.String(),
                    ContaCorrente2 = c.String(),
                    IDFilialSin = c.Int(),
                    IDTipoLogradouro = c.Int(),
                    ContaPadrao = c.Int(),
                    DataExclusao = c.DateTime(),
                    IDUsuarioExclusao = c.Int(),
                    Numero = c.String(),
                    IDCNAE = c.Int(),
                    Titular1 = c.String(),
                    Titular2 = c.String(),
                    IsFuncionario = c.Boolean(),
                    IsAgendaTel = c.Boolean(),
                    Foto = c.Binary(),
                    ObsPessoa = c.String(),
                    IDExterno = c.Int(),
                    IDNFDescricao = c.Int(),
                    IsSistema = c.Boolean(nullable: false),
                    Codigo = c.String(maxLength: 10),
                    Descricao = c.String(),
                    IsDeleted = c.Boolean(nullable: false),
                    DeleterUserId = c.Long(),
                    DeletionTime = c.DateTime(),
                    LastModificationTime = c.DateTime(),
                    LastModifierUserId = c.Long(),
                    CreationTime = c.DateTime(nullable: false),
                    CreatorUserId = c.Long(),
                },
                annotations: new Dictionary<string, object>
                {
                    { "DynamicFilter_Sis_Pessoa_SoftDelete", "EntityFramework.DynamicFilters.DynamicFilterDefinition" },
                })
                .PrimaryKey(t => t.Id);

        }

        public override void Down()
        {
            DropTable("dbo.Sis_Pessoa",
                removedAnnotations: new Dictionary<string, object>
                {
                    { "DynamicFilter_Sis_Pessoa_SoftDelete", "EntityFramework.DynamicFilters.DynamicFilterDefinition" },
                });
            DropTable("dbo.Sis_Paciente",
                removedAnnotations: new Dictionary<string, object>
                {
                    { "DynamicFilter_Sis_Paciente_SoftDelete", "EntityFramework.DynamicFilters.DynamicFilterDefinition" },
                });
            DropTable("dbo.Sis_Internacao",
                removedAnnotations: new Dictionary<string, object>
                {
                    { "DynamicFilter_Sis_Internacao_SoftDelete", "EntityFramework.DynamicFilters.DynamicFilterDefinition" },
                });
            DropTable("dbo.Sis_ContaMedica",
                removedAnnotations: new Dictionary<string, object>
                {
                    { "DynamicFilter_Sis_ContaMedica_SoftDelete", "EntityFramework.DynamicFilters.DynamicFilterDefinition" },
                });
            DropTable("dbo.Sis_Atendimento",
                removedAnnotations: new Dictionary<string, object>
                {
                    { "DynamicFilter_Sis_Atendimento_SoftDelete", "EntityFramework.DynamicFilters.DynamicFilterDefinition" },
                });
            DropTable("dbo.Sis_Ambulatorio",
                removedAnnotations: new Dictionary<string, object>
                {
                    { "DynamicFilter_Sis_Ambulatorio_SoftDelete", "EntityFramework.DynamicFilters.DynamicFilterDefinition" },
                });
        }
    }
}
